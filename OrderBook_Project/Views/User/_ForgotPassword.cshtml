@using QLNhaSachFahasa.Resources
@model QLNhaSachFahasa.Models.LoginModel
<div class="btn-close-window"><span class="k-icon k-i-close-outline"></span></div>
<h3>@ViewText.Title_Forgot_Password?</h3>
<p>@ViewText.Text_Forgot_Password</p>
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "frmForgotPassword" }))
{

    <div class="row mt-4">
        <div class="col-md-12">
            @*<input type="text" id="txtForgotPassword" class="form-control" placeholder="@ViewText.PLACEHOLDER_INPUT_EMAIL" />*@
            @Html.TextBoxFor(model => model.Email, new { @class = "form-control", placeholder = ViewText.PLACEHOLDER_INPUT_EMAIL })
        </div>
    </div>
}
<input type="button" onclick="fnSend()" value="@ViewText.Button_Send" class="btn btn-success w-100 mt-4" />

<script>
    $(".btn-close-window").click(function () {
        var popup = $("#popupForgotPassword").data("kendoWindow");
        popup.close();
    });

    function fnSend() {
        initValidForgotPassword();
        var frmForgotPassword = $("#frmForgotPassword");
        var value = $("#frmForgotPassword").serialize();

        if (frmForgotPassword.valid()) {
            $.ajax({
                url: "@Url.Action("ProcessForgotPassword", "User")",
                data: value,
                type:"POST",
                dataType: "json",
                beforeSend: function () {
                    $(".loading").show();
                },
                success: function (res) {
                    if (res == -1) {
                        initDialog("@Html.Raw(ViewText.Notification)", "Email không tồn tại!", "@Html.Raw(ViewText.Button_Close)");
                    }
                    if (res == 1) {
                        $('#contentForgotPassword').load("@Url.Action("InputCode","User")");
                    }
                },
                complete: function () {
                    $(".loading").hide();
                },
            });
        }
    }
    function initValidForgotPassword() {
         $("#frmForgotPassword").validate({
            ignore: '',
            rules: {
                "Email": {
                    email: true,
                    required: true
                }
            },
            messages:
            {
                "Email": {
                    email:  "@Html.Raw(ViewText.Message_Confirm_Email)",
                    required: "@Html.Raw(ViewText.Message_Required)"
                },
            },
            success: function (error) {
                error.remove();
            }
        });
    }
</script>
