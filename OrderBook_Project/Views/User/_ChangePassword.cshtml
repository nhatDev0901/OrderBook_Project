@using QLNhaSachFahasa.Resources
@model QLNhaSachFahasa.Models.LoginModel
<h3>@ViewText.Change_Password</h3>
<div class="btn-close-window"><span class="k-icon k-i-close-outline"></span></div>
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "frmChangePassword" }))
{

    <div class="row mt-4">
        <div class="col-md-12">
            @Html.PasswordFor(model => model.Password, new { @class = "form-control", placeholder = ViewText.PLACEHOLDER_INPUT_PASSWORD })
        </div>
        <div class="col-md-12">
            @Html.PasswordFor(model => model.ConfimPassword, new { @class = "form-control mt-3", placeholder = ViewText.PLACEHOLDER_INPUT_COMFIRM_PASSWORD })
        </div>
    </div>
}
<input type="button" id="btnChangePassword" value="@ViewText.Button_Change" class="btn btn-success w-100 mt-4" />
<script>
    $(".btn-close-window").click(function () {
        var popup = $("#popupForgotPassword").data("kendoWindow");
        popup.close();
    });
    initValidForgotPassword();
    $("#btnChangePassword").click(function () {
        debugger;
        initValidForgotPassword();
        var change = $("#frmChangePassword");
        var newPass = $("#frmChangePassword #Password").val();
        var test = change.valid();
        if (change.valid()) {
            $.ajax({
                url: "@Url.Action("SaveNewPassword", "User")",
                data: {
                    newPass: newPass
                },
                type: "POST",
                dataType: "json",
                beforeSend: function () {
                    $(".loading").show();
                },
                success: function (res) {
                    if (res == 1) {
                        fnOpenLogin();
                    }
                    if (res == 0) {
                        initDialog("@Html.Raw(ViewText.Notification)", "@Html.Raw(ViewText.Update_Failed)", "@Html.Raw(ViewText.Button_Close)");
                    }
                },
                complete: function () {
                    $(".loading").hide();
                },
            });
        }
    });
    function initValidForgotPassword() {
        $("#frmChangePassword").validate({
            ignore: '',
            rules: {
                "Password": {
                    required: true,
                    minlength: 6,
                    maxlength: 20
                },
                "ConfimPassword": {
                    required: true,
                    equalTo: "#frmChangePassword #Password"
                }
            },
            messages:
            {
                 "Password": {
                    required:  "@Html.Raw(ViewText.Message_Required)",
                    minlength: "@Html.Raw(ViewText.Message_Min_Length)",
                    maxlength: "@Html.Raw(ViewText.Message_Max_Length)"
                },
                "ConfimPassword": {
                    required:  "@Html.Raw(ViewText.Message_Required)",
                    equalTo: "@Html.Raw(ViewText.Message_Confim_Password)"
                }
            },
            success: function (error) {
                error.remove();
            }
        });
    }
</script>
